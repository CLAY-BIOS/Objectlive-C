/*
 /
//  main.m
//  Objectlive-C-03-OC面向过程和面向对象
//
//  Created by 辩识、 on 2020/11/20.
/
    OC在C语言的基础之上。
        1.将C的复杂的，繁琐的，可恶的语法封装的更为简单。
            #import
            NSlog
            NSString
        2.在C语言的基础之上新增了一小部分面向对象的语法。
    
    实现需求之一：
        要把大象放进冰箱应该怎么办？
            1.打开冰箱门。
            2.把大象放进去。
            3.把冰箱门关上。
                有没有更好的方式？
                    找一个冰箱 自己开门 自己把大象拉进去 自己关门。
    实现需求之二：
        买电脑的实现方式一
            1.根据自己的需求和预算确定买什么型号的电脑。
                10000RMB     IOS开发
            2.在网上查找资料 确定型号
                Thinkpad    T450s
            3.去到电脑城
            4.找到专卖店
            5.砍价·成交
            6.愉快的回家了
            ------------------
            有可能会出问题，就是背骗。。。。
            避免被骗的方式（方式二）：
                    1.找一个电脑高手。
                    2....
                    ......
            买电脑的两种方式：
                    1.每一件事都是我们自己去做，这样不好。你不是专业的，所以你无法做到专业。
                        强调的是过程，强调的是步骤。我是主角，我是一个彻头彻尾的执行者。
                    2.找一个电脑高手。只需要带钱，其它事情电脑高手帮助我做。
                        强调的是电脑高手。我就是一个扬眉吐气的指挥者。
            同一件事情我们有两种不同的解决思路：
                    1.如果解决一件事的时候，每一件事情都是我们亲自去一步步实现。那么这种解决问题的思路就叫做面向过程的解决思路。
                    2.如果解决一件事的时候，自己不亲自去做，而是找一个专门做这件事的人来帮助我们做，这样解决问题的思路就叫做面向对象的解决思路。
                        （面向过程与面向对象是解决一个问题的不同的思路）
---------------------------------------------------------------------------------------------------------
 
    代码世界的面向过程与面向对象。
        面向过程：
            在遇到一个需求的时侯，实现这个需求的每一个步骤都是自己写代码亲自去一步步实现，那么这种解决问题的思路就叫做面向过程的解决思路
        面向对象：
            在遇到一个需求的时侯，自己不亲自去做，而是找一个专门做这件事的人来帮助我们做，这样解决问题的思路就叫做面向对象的解决思路。
 
    面向对象和面向过程有缺点分析：
        C语言是一门面向过程的语言。有功能的概念，但是没有人的概念。、
        OC语言是一门面向对象的语言。
        面向过程的解决问题的缺点：
                        后期的维护和修改不方便。
        面向对象的解决问题的优点：
                        后期的维护和修改十分方便。
        使用面向对象设计我们的程序，可以让我们的程序在后期的维护和修改中更加方便和快捷。
 
    如何使用面向对象来设计程序：
        当你遇到一个需求的时候，不要亲自去实现。
            1.先看看有没有现成的人是专门做这件事的·框架·如果有就直接用。
            2.如果没有，就自己设计一个这样的功能，自己设计出来的功能可以多次使用。
*/

#import <Foundation/Foundation.h>

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        // insert code here...
        int arr[]={213,657,56,218,768,376,953,56,12,77,4363};
        //找一个专门排序的人，让他排序。
        
        NSLog(@"Hello, World!");
    }
    return 0;
}
